with paying_users as (
  SELECT
    time :: date as date,
    count(DISTINCT user_id) as paying_users
  FROM
    user_actions
  where
    order_id not in (
      SELECT
        order_id
      FROM
        user_actions
      where
        action = 'cancel_order'
    )
  group by
    date
  ORDER BY
    date
),
active_couriers as (
  SELECT
    time :: date as date,
    count(DISTINCT courier_id) as active_couriers
  FROM
    courier_actions
  where
    order_id in (
      SELECT
        order_id
      FROM
        courier_actions
      where
        action = 'deliver_order'
    )
  group by
    date
  ORDER BY
    date
),
total_user_id as (
  SELECT
    date,
    sum(new_users) OVER(
      ORDER BY
        date
    ) :: int as total_users
  FROM
    (
      SELECT
        min_date as date,
        count(user_id) as new_users
      FROM
        (
          SELECT
            user_id,
            min(date) as min_date
          FROM
            (
              SELECT
                user_id,
                time :: date as date
              FROM
                user_actions
            ) tt1
          GROUP BY
            user_id
        ) tt2
      GROUP BY
        min_date
      ORDER BY
        date
    ) t1
),
total_couriers_id as (
  SELECT
    date,
    sum(new_couriers) OVER(
      ORDER BY
        date
    ) :: int as total_couriers
  FROM
    (
      SELECT
        min_date as date,
        count(courier_id) as new_couriers
      FROM
        (
          SELECT
            courier_id,
            min(date) as min_date
          FROM
            (
              SELECT
                courier_id,
                time :: date as date
              FROM
                courier_actions
            ) tt3
          GROUP BY
            courier_id
        ) tt4
      GROUP BY
        min_date
      ORDER BY
        date
    ) t2
)
SELECT
  date,
  paying_users,
  active_couriers,
  round(paying_users :: decimal / total_users * 100, 2) as paying_users_share,
  round(active_couriers :: decimal / total_couriers * 100, 2) as active_couriers_share
FROM
  paying_users
  left join active_couriers using(date)
  left join total_user_id using(date)
  left join total_couriers_id using(date)
ORDER BY
  date
